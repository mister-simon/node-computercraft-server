---------------------------------------------------
-- Fancy version of the getAllScripts script
--   Fancified for improved showiness when
--   used in a startup / shell.run context
---------------------------------------------------

local base_url = "https://cc-scripts.herokuapp.com/"
local listing_endpoint = "listing/lua"
local doneMessage = "WE DID IT"

local term_w, term_h = term.getSize()

function getUrlContents(endpoint)
	local http_handle = http.get(base_url .. endpoint)
	local status = http_handle.getResponseCode()

	if status ~= "200" then
		print("Error getting: " .. endpoint)
		print("Status code: " .. status)
		os.exit()
	end

	return http_handle.readAll()
end

function main()
	local listing = textutils.unserialise(getUrlContents(listing_endpoint))
	local listing_length = #listing

	local data = ""
	local file_handle = nil

	for i=1,listing_length do
		-- Output what's happening in a satisfying way
		term.clear()
		term.setCursorPos(1,1)
		loadingBar(listing_length / i)

		for j=1,i do
			print("Getting file: "..listing[j])
		end

		-- Actually get and store the files
		data = getUrlContents(listing[i])
		
		file_handle = fs.open(listing[i], "w");
		file_handle.write(data)
		file_handle.close()
	end

	print()
	fancyMessage(doneMessage)
	
	sleep(.5)

	term.clear()
	term.setCursorPos(1,1)
end

-- Write a fancy message, centred in the console
function fancyMessage(message)
	message = ",.-^ > "..message.." < ^-.,"

	local msg_length = string.len(message)
	local cur_x, cur_y = term.getCursorPos()

	term.setCursorPos(math.floor((term_w - msg_length) / 2), cur_y)
	textutils.slowPrint(message)
end

-- Ratio should be between 0-1
function loadingBar(ratio)
	local char_pos = math.floor((term_w - 2) / ratio)
	print("|"..string.rep("=", char_pos).."|")
end

main()